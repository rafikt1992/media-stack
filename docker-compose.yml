name: media-stack
services:

  # To use/enable VPN, Run this compose file with --profile=vpn. Its highly recommended to use VPN.
  # vpn:
  #   ## Read https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers for details on configuring VPN for your service provider.
  #   profiles: ["vpn"]
  #   container_name: vpn
  #   image: qmcgaw/gluetun:v3.39.1
  #   cap_add:
  #     - NET_ADMIN
  #   environment:
  #     - VPN_SERVICE_PROVIDER=protonvpn # Valid values: nordvpn, expressvpn, protonvpn, surfshark or custom
  #     - VPN_TYPE=wireguard
  #     - WIREGUARD_PRIVATE_KEY=gKju2ZmaE1Jl1dxBFVD03ogCmxqH4URExjoPj5s/3U4=
  #     - SERVER_COUNTRIES=Netherlands
  #     - FREE_ONLY=on

      # - SERVER_COUNTRIES=Netherlands
    
      # - FREE_ONLY=on  # Valid with protonvpn only. Value willbe set "on" if using free subscription provided by protonvpn

      ## Enable below if VPN_SERVICE_PROVIDER=custom
      # - VPN_TYPE=openvpn # or wireguard. 

      ## If VPN_TYPE is openvpn
      # - OPENVPN_CUSTOM_CONFIG=/gluetun/custom.conf

      ## If VPN_TYPE is wireguard. Replace below env variables as required.
      # - VPN_ENDPOINT_IP=212.8.243.68                                              # Replace with your wg endpoint ip or domain
      # - VPN_ENDPOINT_PORT=51820                                               # Replace with wg server port
      # - WIREGUARD_PUBLIC_KEY= n4RGP+MGDzRHZ1eoPLQZgpuWxtjnW7qL8qzOP1DRvHo=    # Replace with your wg public key
         # Replace with your wg client private key
      # - WIREGUARD_PRESHARED_KEY=xOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=  # Replaced with your wg pre-shared key
      # - WIREGUARD_ADDRESSES="10.64.222.21/32"                                 # Replace with wg address

    ## Enable volume if VPN_SERVICE_PROVIDER=custom and VPN_TYPE=openvpn is used
    # volumes:
      # - /yourpath/yourconfig.conf:/gluetun/config.conf:ro

    # networks:
    #   - mynetwork

    # devices:
    #   - /dev/net/tun:/dev/net/tun
      
    # Uncomment/enable below ports if VPN is used/enabled
    # ports:
    #   # qbittorrent ports
    #   - 5080:5080
    #   - 6881:6881
    #   - 6881:6881/udp
    #   # prowlarr ports
    #   - 9696:9696
    # restart: "unless-stopped"

  sabnzbd:
    profiles: ["vpn", "no-vpn"]
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=CET
    networks:     
      mynetwork:
        ipv4_address: 172.21.0.10
    volumes:
      - sabnzbd-config:/config
      - /mnt/qbittorrent:/downloads #optional
      - /mnt/qbittorrent:/incomplete-downloads #optional
      - ./sabnzbd-scripts:/scripts
    ports:
      - 8085:8080
    restart: unless-stopped

  radarr:
    profiles: ["vpn", "no-vpn"]
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    networks:
      # - mynetwork   # Comment this line if VPN is enabled
    ## Uncomment below lines if VPN is enabled
      mynetwork:
        ipv4_address: 172.21.0.5 # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=CET
    ports:
      - 7878:7878
    volumes:
      - radarr-config:/config
      - /mnt/qbittorrent:/downloads
    restart: "unless-stopped"

  sonarr:
    profiles: ["vpn", "no-vpn"]
    image: linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      # - mynetwork   # Comment this line if VPN is enabled
    ## Uncomment below lines if VPN is enabled
      mynetwork:
        ipv4_address: 172.21.0.6 # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - sonarr-config:/config
      - /mnt/qbittorrent:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  prowlarr:
    profiles: ["vpn", "no-vpn"]
    container_name: prowlarr
    image: linuxserver/prowlarr:latest

    networks:
      mynetwork:
        ipv4_address: 172.21.0.11  # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=CET
    volumes:
      - prowlarr-config:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  jellyseerr:
    profiles: ["vpn", "no-vpn"]
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=CET
    volumes:
      - jellyseerr-config:/app/config
    ports:
      - 5055:5055
    restart: unless-stopped

  jellyfin:
    profiles: ["vpn", "no-vpn"]
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=CET
    volumes:
      - ./jellyfin-config:/config
      - /mnt/qbittorrent:/data
  # devices:
   #  - /dev/videoN:/dev/videoN # Mount GPU device 
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 8920:8920
    restart: unless-stopped
  
  # Doc: https://github.com/navilg/cleanmyarr
  # cleanmyarr:
  #   profiles: ["vpn", "no-vpn"]
  #   depends_on:
  #     - radarr
  #     - sonarr
  #   image: linuxshots/cleanmyarr:0.8.1
  #   container_name: cleanmyarr
  #   networks:
  #     - mynetwork
  #   volumes:
  #     - cleanmyarr-config:/config
    # restart: unless-stopped
    # environment:
    # - CMA_MAINTENANCE_CYCLE=${CMA_MAINTENANCE_CYCLE:-""}
    # - CMA_DELETE_AFTER_DAYS=${CMA_DELETE_AFTER_DAYS:-""}
    # - CMA_ENABLE_EMAIL_NOTIFICATION=${CMA_ENABLE_EMAIL_NOTIFICATION:-""}
    # - CMA_SMTP_USERNAME=${CMA_SMTP_USERNAME:-""}
    # - CMA_SMTP_ENCODED_PASSWORD=${CMA_SMTP_ENCODED_PASSWORD:-""}
    # - CMA_SMTP_TO_EMAILS=${CMA_SMTP_TO_EMAILS:-""}
    # - CMA_ENABLE_GOTIFY_NOTIFICATION=${CMA_ENABLE_GOTIFY_NOTIFICATION:-""}
    # - CMA_GOTIFY_URL=${CMA_GOTIFY_URL:-""}
    # - CMA_GOTIFY_ENCODED_APP_TOKEN=${CMA_GOTIFY_ENCODED_APP_TOKEN:-""}
    # - CMA_ENABLE_TELEGRAM_NOTIFICATION=${CMA_ENABLE_TELEGRAM_NOTIFICATION:-""}
    # - CMA_TELEGRAM_ENCODED_BOT_TOKEN=${CMA_TELEGRAM_ENCODED_BOT_TOKEN:-""}
    # - CMA_TELEGRAM_CHAT_ID=${CMA_TELEGRAM_CHAT_ID:-""}
    # - CMA_MONITOR_RADARR=${CMA_MONITOR_RADARR:-""}
    # - CMA_RADARR_URL=${CMA_RADARR_URL:-""}
    # - CMA_RADARR_ENCODED_API_KEY=${CMA_RADARR_ENCODED_API_KEY:-""}
    # - CMA_RADARR_ENABLE_NOTIFICATION=${CMA_RADARR_ENABLE_NOTIFICATION:-""}

volumes:
  # torrent-downloads:
  #   driver_opts:
  #     type: "nfs"
  #     o: "addr=192.168.178.247,nfsvers=3"
  #     device: ":/nfs/qbittorren"
  radarr-config:
  sonarr-config:
  sabnzbd-config:  
  prowlarr-config:
  # jellyfin-config:
  qbittorrent-config:
  jellyseerr-config:
  # cleanmyarr-config:

networks:
  mynetwork:
    external: true
